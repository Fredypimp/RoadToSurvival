<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Starts everything by downloading the content
    firstRun = true;
    firstRunText = "0%";
    file = noone;
    if (!file_exists("data1.dat"))
    {
        file = http_get_file("http://www.JabeStream.info/files/gameContent.zip", "gameContent.zip"); 
    }
    else
    {
        firstRun = false;
    }

if (!firstRun)
{
// Once the stuff has been downloaded, reads menu images

    var fontSpr = sprite_add("data/menu/fon.idf",131,true,false,0,0);
    globalvar basicFont;
    basicFont = font_add_sprite(fontSpr,32,false,1);
    
    backgroundImage = background_add("data/menu/back/backMenu.idf",false,false);
    background_index[0] = backgroundImage;
    
    cursor_sprite = sprite_add("data/menu/cur.idf",1,false,false,6,6);
    
    buttonBase = sprite_add("data/menu/but.idf",2,true,false,0,0);

// Then reads the informations from the current option file
    file_rename("data1.dat","data1.ini");
    ini_open("data1.ini");
    
    globalvar debug;
    debug = ini_read_real("Game","de",0);
    
    globalvar playerName;
    playerName = ini_read_string("Player","name","Player");
    
    globalvar musicMuted, soundMuted, enviroMuted, cinematicMuted;
    musicMuted = ini_read_real("Sound","mm", 0);
    soundMuted = ini_read_real("Sound","sm", 0);
    enviroMuted = ini_read_real("Sound","em", 0);
    cinematicMuted = ini_read_real("Sound","cm", 0);
    
    globalvar keyTroop1, keyTroop2, keyTroop3, keyTroop4, keyHero, keyMerc, keyTarget, keyStop;
    keyTroop1 = ini_read_real("Keybinds","kT1", 49); // Troop1 selection
    keyTroop2 = ini_read_real("Keybinds","kT2", 50); // Troop2 selection
    keyTroop3 = ini_read_real("Keybinds","kT3", 51); // Troop3 selection
    keyTroop4 = ini_read_real("Keybinds","kT4", 52); // Troop4 selection
    keyHero = ini_read_real("Keybinds","kT5", 53); // Hero selection
    keyMerc = ini_read_real("Keybinds","kT6", 54); // Mercenaries selection
    keyTarget = ini_read_real("Keybinds","kAt", 65); // Attack zone
    keyStop = ini_read_real("Keybinds","kSt", 83); // "Stop what you're doing"
    
    ini_close();
    file_rename("data1.ini","data1.dat");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firstRun = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mX = mouse_x, mY = mouse_y;

var butX = 624, firstButtonY = 144, buttonSpaces = 56;

// affect the buttons all at once
for (var i=0;i&lt;5;i++)
{
    var butY = firstButtonY+(buttonSpaces*i);
    
    if (mX &gt;= butX &amp;&amp; mX &lt;= room_width &amp;&amp; mY &gt;= butY &amp;&amp; mY &lt;= (butY+sprite_get_height(buttonBase)))
    {
        if (i == 0) doNewGame();
        if (i == 1) doLoadGame();
        if (i == 2) doMultiplayer();
        if (i == 3) doOptions();
        if (i == 4) doQuit();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_find_value(async_load, "id") == file)
{
    var status = ds_map_find_value(async_load, "status");
    if (status == 1)
    {
        var total = ds_map_find_value(async_load, "contentLength");
        var current = ds_map_find_value(async_load, "sizeDownloaded");
        
        var percent = (total/current)*100;
        firstRunText = string(current)+"/"+string(total)+" - "+string(percent)+"%";
    }
    
    if (status == 0)
    {
        var path = ds_map_find_value(async_load, "result");
        var files = zip_unzip(path, working_directory);
        file_delete("gameContent.zip");
        game_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!firstRun)
{
// Draw buttons
    var mX = mouse_x, mY = mouse_y;
    
    draw_set_font(basicFont);
    
    var butX = 624, firstButtonY = 144, buttonSpaces = 56;
    var text;
    text[0] = "New Game";
    text[1] = "Load Game";
    text[2] = "Multiplayer";
    text[3] = "Options";
    text[4] = "Quit";
    
    // Draws all the buttons at once
    for (var i=0;i&lt;5;i++)
    {
        var butY = firstButtonY+(buttonSpaces*i);
        
        if (mX &gt;= butX &amp;&amp; mX &lt;= room_width &amp;&amp; mY &gt;= butY &amp;&amp; mY &lt;= (butY+sprite_get_height(buttonBase)))
        {
            draw_sprite(buttonBase,1,butX,butY);
        }
        else
        {
            draw_sprite(buttonBase,0,butX,butY);
        }
        draw_text(butX+2,butY+4,text[i]);
    }
}
else
{   
    draw_set_colour(c_white);
    
    var text = "Please wait, downloading first run stuff#";
    var tX = (room_width/2) - (string_width(text)/2)
    var tY = (room_height/2);
    
    draw_text(tX,tY,text+firstRunText);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
