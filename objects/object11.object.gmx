<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate the dungeon
floorGrid = ds_grid_create(room_width/16,room_height/16);

// Starts by filling everything with walls
ds_grid_set_region(floorGrid,0,0,ds_grid_width(floorGrid),ds_grid_height(floorGrid), gridWall);

// Now creates the first room
ds_grid_set_disk(floorGrid,mean(objTroop1.x,objTroop2.x,objTroop3.x,objTroop4.x),mean(objTroop1.y,objTroop2.y,objTroop3.y,objTroop4.y),5,gridEmpty);


// Now chooses how many rooms it will create and
// creates the room frames
var nbRooms = irandom(8) + 5; // 5-13 rooms
repeat(nbRooms)
{
    var circle = choose(true,false); // determines if the room is circular
    if (circle)
    {
        var roomX,roomY,roomSize;
        randomize();
        roomX = irandom(ds_grid_width(floorGrid-8))+4;
        roomY = irandom(ds_grid_height(floorGrid-8))+4;
        roomSize = irandom(2)+1;
        ds_grid_set_disk(floorGrid,roomX,roomY,roomSize,gridEmpty);
    }
    else
    {
        var roomX,roomY,roomX2,roomY2;
        randomize();
        roomX = irandom(ds_grid_width(floorGrid-12))+2;
        roomY = irandom(ds_grid_height(floorGrid-12))+2;
        roomX2 = roomX + irandom(5) + 3;
        roomY2 = roomY + irandom(5) + 3;
        ds_grid_set_region(floorGrid,roomX,roomY,roomX2,roomY2,gridEmpty);
    }
}








// Then spawns every objects depending on the grid value
var i,j;
for(i=0;i&lt;=ds_grid_width(floorGrid);i++)
{
    for(j=0;j&lt;=ds_grid_height(floorGrid);j++)
    {
        var temp = ds_grid_get(floorGrid,i,j);
        switch(temp)
        {
            case gridEmpty: break;
            case gridWall: room_instance_add(rmDungeon,i*16,j*16,objWall); break;
            default: break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
