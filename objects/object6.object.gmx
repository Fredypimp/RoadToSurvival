<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parentEnemy</parentName>
  <maskName>sprUnitMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialisation

//Variables
unitType = unitRogue;
scrUnitInit(unitType);
movePath = path_add();
lastXpos = x;
dir = 1;
alarm[0] = 1;

// Action system
state = stateIdle;
targetObj = noone;
targetX = -1;
targetY = -1;

// Sprite variables
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrUnitInit(unitType);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animations
if (state = stateMoving)
{
    image_speed = animSpeed;
    if (image_index &lt; 2.5 &amp;&amp; image_index &gt; 2) 
    {
        image_index = 0;
    }
}
else if (state = stateAttack)
{
    image_speed = 0;
    image_index = 2;
}
else
{
    image_speed = 0;
    image_index = 0;
}

//direction
if (x &gt; lastXpos) dir = 1;
if (x &lt; lastXpos) dir = -1;
lastXpos = x;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actions


// Profondeur
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actions

if !(place_empty(x,y))
{
    var tempDir = choose(0,1);
    
    randomize();
    if (tempDir = 0)
    {
        if (collision_point(x-8,y,parentBlock,true,false))
        {
            targetX = x+8;
            targetY = y;
        }
        else if (collision_point(x+8,y,parentBlock,true,false))
        {
            targetX = x-8;
            targetY = y;
        }
        else
        {
            targetX = choose(x+8,x-8);
            targetY = y;
        }
    }
    else
    {
        if (collision_point(x,y-8,parentBlock,true,false))
        {
            targetX = x;
            targetY = y+8;
        }
        else if (collision_point(x,y+8,parentBlock,true,false))
        {
            targetX = x;
            targetY = y-8;
        }
        else
        {
            targetX = x;
            targetY = choose(y+8,y-8);
        }
    }
    
    mp_grid_path(grilleMap,movePath,x,y,targetX,targetY,true);
    path_start(movePath,walkSpeed,0,false);
    state = stateMoving;
}

targetX = noone;
targetY = noone;
state = stateIdle;



/*
if (tempDir = 0)
    {
        targetX = choose(x+8,x+8,x-8,x-8);
        targetY = y;
    }
    else
    {
        targetX = x;
        targetY = choose(y+8,y-8,y+8,y-8);
    }
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selection circle
if (selected)
{
    draw_set_color(c_white);
    draw_set_alpha(0.6);
    draw_ellipse(x-6,y-3,x+6,y+3,false);
    
    draw_set_color(c_white);
    draw_set_alpha(0.6);
    draw_ellipse(targetX-6,targetY-3,targetX+6,targetY+3,true);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unit sprite
draw_set_alpha(1);
draw_sprite_ext(sprite_index,-1,x,y,dir,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
